record(stringin, "${DEVICENAME}:${SENSOR}:DevNameR")
{
    field(DESC, "Devicename of gauge connected to channel")
    field(DISP, "1")
}


record(stringin, "${DEVICENAME}:${SENSOR}:ChanR")
{
    field(DESC, "The channel this gauge is connected to")
    field(DISP, "1")
    field(PINI, "YES")
    field(VAL,  "${SENSOR}")
}


record(longin, "${DEVICENAME}:${SENSOR}:NumOfRlysR")
{
    field(DESC, "Number of relays assigned to channel")
    field(DISP, "1")
}


record(scalcout, "${DEVICENAME}:${SENSOR}:iCheckModType")
{
  field(INAA, "${DEVICENAME}:Mod${SLOT}:TypeR CP")
  field(INPA, "${DEVICENAME}:CommsOK CP")
  field(CALC, "'0'")
}


record(calcout, "${DEVICENAME}:${SENSOR}:iCheckType")
{
  field(INPA, "${DEVICENAME}:${SENSOR}:iCheckModType CP")
  field(INPB, "${DEVICENAME}:iSensorCtrlModes-RB.${SOURCE} CP")
  field(CALC, "A&&B")
  field(VAL,  "42")
  field(OOPT, "On Change")
  field(OUT,  "${DEVICENAME}:${SENSOR}:ValidR PP")
}


record(calcout, "${DEVICENAME}:${SENSOR}:iSetType")
{
  field(INPA, "${DEVICENAME}:CommsOK CP")
  field(INPB, "${DEVICENAME}:iSensorCtrlModes-RB.${SOURCE} CP")
  field(INPC, "${DEVICENAME}:${SENSOR}:ValidR CP")
  field(CALC, "A ? (B ? (2 * C) : 1) : 0")
  field(VAL,  "42")
  field(OOPT, "On Change")
  field(OUT,  "${DEVICENAME}:${SENSOR}:iSensorType-FO PP")
}


record(dfanout, "${DEVICENAME}:${SENSOR}:iSensorType-FO")
{
  field(SELM, "All")
  field(OUTA, "${DEVICENAME}:${SENSOR}:iSensorTypeR PP")
  field(OUTB, "${DEVICENAME}:${SENSOR}:SensorTypeR.PROC")
}


record(mbbi, "${DEVICENAME}:${SENSOR}:iSensorTypeR")
{
  field(DISP, "1")
  field(PINI, "YES")
  field(VAL,  "0")
  field(ZRST, "N/A")
  field(ZRVL, "0")
  field(ONST, "N/C")
  field(ONVL, "1")
}


record(stringin, "${DEVICENAME}:${SENSOR}:SensorTypeR")
{
  field(DISP, "1")
  field(INP,  "${DEVICENAME}:${SENSOR}:iSensorTypeR")
}


record(bi, "${DEVICENAME}:${SENSOR}:ValidR")
{
  field(ZNAM, "Incorrect Gauge Type")
  field(ONAM, "Correct Gauge Type")
  field(ZSV,  "MAJOR")
}


record(calcout, "${DEVICENAME}:${SENSOR}:iPrsR")
{
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto get_pressure(${SENSOR}) ${ASYNPORT}")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR CP")
}


record(stringout, "${DEVICENAME}:${SENSOR}:iUnitChanged")
{
  field(DOL,  "${DEVICENAME}:Unit-RB CPP")
  field(OMSL, "closed_loop")
  field(OUT,  "${DEVICENAME}:${SENSOR}:PrsR.EGU NPP")
}


record(ai, "${DEVICENAME}:${SENSOR}:PrsR")
{
  field(INP,  "${DEVICENAME}:${SENSOR}:iPrsR.B CP MSS")
  field(PREC, "2")
  field(EGU,  "mBar")
  field(DISV, "-1")
  field(SDIS, "${DEVICENAME}:${SENSOR}:PrsStatR CP MSS")
}


record(stringin, "${DEVICENAME}:${SENSOR}:PrsR-STR")
{
  field(INP,  "${DEVICENAME}:${SENSOR}:iPrsR.B CP MSS")
}


record(mbbi, "${DEVICENAME}:${SENSOR}:GaugeStatR")
{
  field(INP,  "${DEVICENAME}:${SENSOR}:iPrsR.A CP MSS")
  field(ZRST, "DATA OK")
  field(ZRVL, "0")
  field(ONST, "UNDERRANGE")
  field(ONVL, "1")
  field(TWST, "OVERRANGE")
  field(TWVL, "2")
  field(THST, "MEASUREMENT CIRCUIT ERROR")
  field(THVL, "3")
  field(FRST, "MEASUREMENT CIRCUIT OFF")
  field(FRVL, "4")
  field(FVST, "NO HARDWARE")
  field(FVVL, "5")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR CP")
}


record(calc, "${DEVICENAME}:${SENSOR}:iCalcStat")
{
# Increase GaugeStat value if INVALID
  field(INPA, "${DEVICENAME}:${SENSOR}:GaugeStatR CP")
  field(INPB, "${DEVICENAME}:${SENSOR}:GaugeStatR.SEVR")
  # SEVR == INVALID
  field(CALC, "C:=(B==3 ? 0 : A + 1);C")
}


record(mbbo, "${DEVICENAME}:${SENSOR}:iPrsStatS")
{
  field(DOL,  "${DEVICENAME}:${SENSOR}:iCalcStat CP MSS")
  field(OMSL, "closed_loop")
  field(OUT,  "${DEVICENAME}:${SENSOR}:PrsStatR MSS PP")
  field(DTYP, "Raw Soft Channel")

  # INVALID
  #  -  0
  field(ZRVL, "0")

  # ON:
  #  -  1 -- DATA OK
  field(ONVL, "1")

  # OFF:
  #  -  5 -- MEASUREMENT CIRCUIT OFF
  field(FVVL, "2")

  # ERROR:
  #  -  4 -- MEASUREMENT CIRCUIT ERROR
  #  -  6 -- NO HARDWARE
  field(FRVL, "3")
  field(SXVL, "3")

  # OVER-RANGE:
  #  -  3 -- OVERRANGE
  field(THVL, "4")

  # UNDER-RANGE:
  #  -  2 -- UNDERRANGE
  field(TWVL, "5")
}


record(mbbi, "${DEVICENAME}:${SENSOR}:PrsStatR")
{
  field(DESC, "Status of channel ${SENSOR}")

  field(ZRST, "INVALID")

  field(ONST, "ON")

  field(TWST, "OFF")

  field(THST, "ERROR")
  field(THSV, "MAJOR")

  field(FRST, "OVER-RANGE")

  field(FVST, "UNDER-RANGE")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR CP")
}


record(mbbo, "${DEVICENAME}:${SENSOR}:CtrlMode")
{
  field(ZRST, "NO SENSOR")
  field(ZRVL, "0")
  field(ONST, "OFF")
  field(ONVL, "1")
  field(TWST, "AUTO")
  field(TWVL, "2")
  field(THST, "ON")
  field(THVL, "3")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR")
}


record(mbbo, "${DEVICENAME}:${SENSOR}:CtrlModeS")
{
  field(DTYP, "Raw Soft Channel")
  field(OUT,  "${DEVICENAME}:${SENSOR}:iCtrlModeCommitS.A PP")
  field(ZRST, "OFF")
  field(ZRVL, "1")
  field(ONST, "AUTO")
  field(ONVL, "2")
  field(TWST, "ON")
  field(TWVL, "3")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR")
}


record(calcout, "${DEVICENAME}:${SENSOR}:iCtrlModeCommitS")
{
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto set_mode_${SENSOR} ${ASYNPORT}")
  field(FLNK, "${DEVICENAME}:iSensorCtrlModes-RB")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR")
}


record(mbbi, "${DEVICENAME}:${SENSOR}:CtrlModeS-ErrorR")
{
  field(DTYP, "Raw Soft Channel")
  field(INP,  "${DEVICENAME}:${SENSOR}:iCtrlModeCommitS.E CP MSS")
  field(ZRVL, "0")
  field(ZRST, "NO ERROR")
  field(ONVL, "1")
  field(ONST, "SYNTAX ERROR")
  field(ONSV, "MAJOR")
  field(TWVL, "10")
  field(TWST, "INVALID PARAMETER")
  field(TWSV, "MAJOR")
  field(THVL, "100")
  field(THST, "NO HARDWARE")
  field(THSV, "MAJOR")
  field(FRVL, "1000")
  field(FRST, "TPG ERROR")
  field(FRSV, "MAJOR")
}


record(mbbi, "${DEVICENAME}:${SENSOR}:CtrlMode-RB")
{
  field(INP,  "${DEVICENAME}:iSensorCtrlModes-RB.${SOURCE} CP MSS")
  field(ZRST, "NO SENSOR")
  field(ZRVL, "0")
  field(ONST, "OFF")
  field(ONVL, "1")
  field(TWST, "AUTO")
  field(TWVL, "2")
  field(THST, "ON")
  field(THVL, "3")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR CP")
}


record(calcout, "${DEVICENAME}:${SENSOR}:iCtrlModeSInit")
{
  field(DESC, "Initializes CtrlMode from CtrlMode-RB")
  field(INPA, "${DEVICENAME}:${SENSOR}:CtrlMode-RB CP")
  field(INPB, "${DEVICENAME}:${SENSOR}:CtrlMode-RB.STAT")
  field(CALC, "B==0")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "A")
  field(OUT,  "${DEVICENAME}:${SENSOR}:CtrlMode PP")
}


record(mbbi, "${DEVICENAME}:${SENSOR}:FltTim-RB")
{
  field(DTYP, "Raw Soft Channel")
  field(INP,  "${DEVICENAME}:iSensorFltTims-RB.${SOURCE} CP MSS")
  field(ZRST, "FAST")
  field(ZRVL, "1")
  field(ONST, "MEDIUM")
  field(ONVL, "2")
  field(TWST, "SLOW")
  field(TWVL, "3")
  field(FLNK, "${DEVICENAME}:${SENSOR}:iFltTimInit")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:${SENSOR}:ValidR CP")
}


record(mbbo, "${DEVICENAME}:${SENSOR}:FltTimS")
{
  field(DTYP, "Raw Soft Channel")
  field(ZRST, "FAST")
  field(ZRVL, "1")
  field(ONST, "MEDIUM")
  field(ONVL, "2")
  field(TWST, "SLOW")
  field(TWVL, "3")
  # Cannot go directly to SensorFltTimsS as this PV needs to be processed when updated from -RB
  field(FLNK, "${DEVICENAME}:${SENSOR}:FltTimCommitS")
}


record(fanout, "${DEVICENAME}:${SENSOR}:FltTimCommitS")
{
  # Dynamically disabled by iFltTimInit-FO when FltTimS is updated from its -RB
  field(FLNK, "${DEVICENAME}:SensorFltTimsS")
}


record(seq, "${DEVICENAME}:${SENSOR}:iConnect-FltTim-FO")
{
  field(DOL1, "0")
  field(LNK1, "${DEVICENAME}:${SENSOR}:iFltTimInit.PVAL")
}


record(calcout, "${DEVICENAME}:${SENSOR}:iFltTimInit")
{
  field(INPA, "${DEVICENAME}:${SENSOR}:FltTim-RB MS")
  field(OUT,  "${DEVICENAME}:${SENSOR}:iFltTimInit-FO PP")
  field(VAL,  "0")
  field(CALC, "1")
  field(OOPT, "Transition To Non-zero")
  field(IVOA, "Don't drive outputs")
}


record(seq, "${DEVICENAME}:${SENSOR}:iFltTimInit-FO")
{
  field(DOL1, "1")
  field(LNK1, "${DEVICENAME}:${SENSOR}:FltTimCommitS.DISA")

  field(DOL2, "${DEVICENAME}:${SENSOR}:FltTim-RB")
  field(LNK2, "${DEVICENAME}:${SENSOR}:FltTimS PP")

  field(DOL3, "0")
  field(LNK3, "${DEVICENAME}:${SENSOR}:FltTimCommitS.DISA")
}
