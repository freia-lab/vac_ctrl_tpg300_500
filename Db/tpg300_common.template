record(stringin, "$(PREFIX):CtrlTypeR")
{
  field(PINI, "YES")
  field(VAL,  "TPG-300")
}

record(stringin, "$(PREFIX):FWVersion_Main_R")
{
  alias("$(PREFIX):VERSION-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_version $(TPG_PORT)")
  field(PINI, "YES")
}

record(stringin, "$(PREFIX):SensorModule_A_R")
{
  alias("$(PREFIX):SLOT1-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_slot_1() $(TPG_PORT)")
  field(PINI, "YES")
}

record(stringin, "$(PREFIX):SensorModule_B_R")
{
  alias("$(PREFIX):SLOT2-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_slot_2() $(TPG_PORT)")
  field(PINI, "YES")
}

record(stringin, "$(PREFIX):ControlModule_R")
{
  alias("$(PREFIX):SLOT3-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_slot_3() $(TPG_PORT)")
  field(PINI, "YES")
}

record(ai, "$(PREFIX):BaudrtR")
{
  alias("$(PREFIX):BAUD-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_baud $(TPG_PORT)")
  field(PINI, "YES")
}

record(bi, "$(PREFIX):CCUnderRangeControlR")
{
  alias("$(PREFIX):PUC-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_puc $(TPG_PORT)")
  field(PINI, "YES")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
}

record(bo, "$(PREFIX):CCUnderRangeControlS")
{
  alias("$(PREFIX):PUC")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto set_puc $(TPG_PORT)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "$(PREFIX):CCUnderRangeControlR")
}

record(mbbi, "$(PREFIX):UnitR")
{
  alias("$(PREFIX):UNITS-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_units $(TPG_PORT)")
  field(PINI, "YES")
  field(ONST, "mBar")
  field(TWST, "Torr")
  field(THST, "Pa")
}

record(mbbo, "$(PREFIX):UnitS")
{
  alias("$(PREFIX):UNITS")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto set_units $(TPG_PORT)")
  field(ONST, "mBar")
  field(TWST, "Torr")
  field(THST, "Pa")
  field(FLNK, "$(PREFIX):UnitR")
}

record(mbbi, "$(PREFIX):SaveParamsR")
{
  alias("$(PREFIX):SAVE-PARAMS-RBV")
  field(DTYP, "stream")
  field(INP,  "@tpg300.proto get_save_params $(TPG_PORT)")
  field(PINI, "YES")
  field(ZRST, "Default")
  field(ONST, "User-defined")
  field(TWST, "User-defined HS")
}

record(mbbo, "$(PREFIX):SaveParamsS")
{
  alias("$(PREFIX):SAVE-PARAMS")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto set_save_params $(TPG_PORT)")
  field(ZRST, "Default")
  field(ONST, "User-defined")
  field(TWST, "User-defined HS")
  field(FLNK, "$(PREFIX):iReadbacks-FO")
}

record(calcout, "$(PREFIX):iSensorControlModesR")
{
  alias("$(PREFIX):MODE-RBV")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto get_mode() $(TPG_PORT)")
  field(FLNK, "$(PREFIX):iSensorControlModesR-FO")
}

record(seq, "$(PREFIX):iSensorControlModesR-FO")
{
  alias("$(PREFIX):MODE-FO")
  field(DOL1, "$(PREFIX):A1:ControlModeR PP")
  field(DOL2, "$(PREFIX):A2:ControlModeR PP")
  field(DOL3, "$(PREFIX):B1:ControlModeR PP")
  field(DOL4, "$(PREFIX):B2:ControlModeR PP")
  field(DOL5, "$(PREFIX):iSensorControlModesInit PP")
}

record(calcout, "$(PREFIX):SensorControlModesS")
{
  alias("$(PREFIX):MODE")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto set_mode() $(TPG_PORT)")
  field(INPA, "$(PREFIX):A1:ControlModeS")
  field(INPB, "$(PREFIX):A2:ControlModeS")
  field(INPC, "$(PREFIX):B1:ControlModeS")
  field(INPD, "$(PREFIX):B2:ControlModeS")
  field(FLNK, "$(PREFIX):SensorControlModesS-ErrorR")
}

record(mbbi, "$(PREFIX):SensorControlModesS-ErrorR")
{
  alias("$(PREFIX):MODE-STAT")
  field(DTYP, "Raw Soft Channel")
  field(INP,  "$(PREFIX):SensorControlModesS.E")
  field(PINI, "YES")
  field(ZRVL, "0")
  field(ZRST, "NO ERROR")
  field(ONVL, "1")
  field(ONST, "SYNTAX ERROR")
  field(ONSV, "MAJOR")
  field(TWVL, "10")
  field(TWST, "INVALID PARAMETER")
  field(TWSV, "MAJOR")
  field(THVL, "100")
  field(THST, "NO HARDWARE")
  field(THSV, "MAJOR")
  field(FRVL, "1000")
  field(FRST, "TPG ERROR")
  field(FRSV, "MAJOR")
  field(FLNK, "$(PREFIX):iSensorControlModesR")
}

record(calcout, "$(PREFIX):iSensorFilterTimesR")
{
  alias("$(PREFIX):FILT-RBV")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto get_filter() $(TPG_PORT)")
  field(FLNK, "$(PREFIX):iSensorFilterTimesR-FO")
}

record(seq, "$(PREFIX):iSensorFilterTimesR-FO")
{
  alias("$(PREFIX):FILT-FO")
  field(DOL1, "$(PREFIX):A1:FilterTimeR PP")
  field(DOL2, "$(PREFIX):A2:FilterTimeR PP")
  field(DOL3, "$(PREFIX):B1:FilterTimeR PP")
  field(DOL4, "$(PREFIX):B2:FilterTimeR PP")
  field(DOL5, "$(PREFIX):iSensorFilterTimesInit PP")
}

record(calcout, "$(PREFIX):SensorFilterTimesS")
{
  alias("$(PREFIX):FILT")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto set_filter() $(TPG_PORT)")
  field(INPA, "$(PREFIX):A1:FilterTimeS")
  field(INPB, "$(PREFIX):A2:FilterTimeS")
  field(INPC, "$(PREFIX):B1:FilterTimeS")
  field(INPD, "$(PREFIX):B2:FilterTimeS")
  field(FLNK, "$(PREFIX):SensorFilterTimesS-ErrorR")
}

record(mbbi, "$(PREFIX):SensorFilterTimesS-ErrorR")
{
  alias("$(PREFIX):FILT-STAT")
  field(DTYP, "Raw Soft Channel")
  field(INP,  "$(PREFIX):SensorFilterTimesS.E")
  field(PINI, "YES")
  field(ZRVL, "0")
  field(ZRST, "NO ERROR")
  field(ONVL, "1")
  field(ONST, "SYNTAX ERROR")
  field(ONSV, "MAJOR")
  field(TWVL, "10")
  field(TWST, "INVALID PARAMETER")
  field(TWSV, "MAJOR")
  field(THVL, "100")
  field(THST, "NO HARDWARE")
  field(THSV, "MAJOR")
  field(FRVL, "1000")
  field(FRST, "TPG ERROR")
  field(FRSV, "MAJOR")
  field(FLNK, "$(PREFIX):iSensorFilterTimesR")
}

record(calcout, "$(PREFIX):iRelaySetPointStatusesR")
{
  alias("$(PREFIX):FUNC-STAT-RBV")
  field(DTYP, "stream")
  field(OUT,  "@tpg300.proto get_func_stat() $(TPG_PORT)")
  field(PINI, "YES")
  field(FLNK, "$(PREFIX):iRelaySetPointStatusesR-FO")
}

record(seq, "$(PREFIX):iRelaySetPointStatusesR-FO")
{
  alias("$(PREFIX):FUNC-STAT-FO")
  field(DOL1, "$(PREFIX):Relay1:SetpointStatusR PP")
  field(DOL2, "$(PREFIX):Relay2:SetpointStatusR PP")
  field(DOL3, "$(PREFIX):Relay3:SetpointStatusR PP")
  field(DOL4, "$(PREFIX):Relay4:SetpointStatusR PP")
  field(DOL5, "$(PREFIX):RelayA:SetpointStatusR PP")
  field(DOL6, "$(PREFIX):RelayB:SetpointStatusR PP")
}

record(seq, "$(PREFIX):ScanRate")
{
  alias("$(PREFIX):SCAN-RATE")
  field(SCAN, "$(SCAN_RATE)")
  field(DOL1, "$(PREFIX):A1:PressureR PP")
  field(DOL2, "$(PREFIX):A2:PressureR PP")
  field(DOL3, "$(PREFIX):B1:PressureR PP")
  field(DOL4, "$(PREFIX):B2:PressureR PP")
  field(DOL5, "$(PREFIX):iRelaySetPointStatusesR PP")
}


################################################################################
# Reconnect logic                                                              #
################################################################################

record(asyn,"$(PREFIX):iASYN")
{
  field(DTYP, "asynRecordDevice")
  field(PORT, "$(TPG_PORT)")
}

record(calcout, "$(PREFIX):iConnect")
{
  alias("$(PREFIX):RECNCT")
  field(INPA, "$(PREFIX):iASYN.CNCT CP")
  field(VAL,  "0")
  field(CALC, "A")
  field(OOPT, "Transition To Non-zero")
  field(OUT,  "$(PREFIX):iConnect-FO PP")
}

record(seq, "$(PREFIX):iConnect-FO")
{
  alias("$(PREFIX):CNCT-FO")
  field(DOL1, "$(PREFIX):iConnect-FilterTimes-FO PP")
  field(DOL2, "$(PREFIX):iConnect-SensorControlModes-FO PP")
  field(DOL3, "$(PREFIX):iConnect-Relays-FO PP")
  field(DOL4, "$(PREFIX):iReadbacks-FO PP")
}

record(seq, "$(PREFIX):iConnect-Relays-FO")
{
  field(DOL1, "$(PREFIX):Relay1:iConnect-FO PP")
  field(DOL2, "$(PREFIX):Relay2:iConnect-FO PP")
  field(DOL3, "$(PREFIX):Relay3:iConnect-FO PP")
  field(DOL4, "$(PREFIX):Relay4:iConnect-FO PP")
  field(DOL5, "$(PREFIX):RelayA:iConnect-FO PP")
  field(DOL6, "$(PREFIX):RelayB:iConnect-FO PP")
}

record(seq, "$(PREFIX):iReadbacks-FO")
{
  alias("$(PREFIX):RBV-FO")
  field(DOL1, "$(PREFIX):iRelaySetpointsR-FO PP")
  field(DOL2, "$(PREFIX):iSensorFilterTimesR PP")
  field(DOL3, "$(PREFIX):iSensorControlModesR PP")
  field(DOL4, "$(PREFIX):UnitR PP")
  field(DOL5, "$(PREFIX):CCUnderRangeControlR PP")
  field(DOL6, "$(PREFIX):SaveParamsR PP")
  field(DOL7, "$(PREFIX):FWVersion_Main_R PP")
  field(DOL8, "$(PREFIX):SensorModule_A_R PP")
  field(DOL9, "$(PREFIX):SensorModule_B_R PP")
  field(DOLA, "$(PREFIX):ControlModule_R PP")
}

record(seq, "$(PREFIX):iRelaySetpointsR-FO")
{
  alias("$(PREFIX):SP-RBV-FO")
  field(DOL1, "$(PREFIX):Relay1:iGetR PP")
  field(DOL2, "$(PREFIX):Relay2:iGetR PP")
  field(DOL3, "$(PREFIX):Relay3:iGetR PP")
  field(DOL4, "$(PREFIX):Relay4:iGetR PP")
  field(DOL5, "$(PREFIX):RelayA:iGetR PP")
  field(DOL6, "$(PREFIX):RelayB:iGetR PP")
}

record(seq, "$(PREFIX):iConnect-FilterTimes-FO")
{
  alias("$(PREFIX):FILT-CNCT-FO")
  field(DOL1, "0")
  field(LNK1, "$(PREFIX):iSensorFilterTimesInit.CALC PP")
  field(DOL2, "1")
  field(LNK2, "$(PREFIX):iSensorFilterTimesInit.CALC")
}

record(calcout, "$(PREFIX):iSensorFilterTimesInit")
{
  alias("$(PREFIX):FILT-INIT")
  field(INPA, "$(PREFIX):iSensorFilterTimesR MS")
  field(OUT,  "$(PREFIX):iSensorFilterTimesInit-FO PP")
  field(VAL,  "0")
  field(CALC, "1")
  field(OOPT, "Transition To Non-zero")
  field(IVOA, "Don't drive outputs")
}

record(seq, "$(PREFIX):iSensorFilterTimesInit-FO")
{
  alias("$(PREFIX):FILT-INIT-FO")
  field(LNK1, "$(PREFIX):A1:FilterTimeS")
  field(LNK2, "$(PREFIX):A2:FilterTimeS")
  field(LNK3, "$(PREFIX):B1:FilterTimeS")
  field(LNK4, "$(PREFIX):B2:FilterTimeS")
  field(DOL1, "$(PREFIX):A1:FilterTimeR")
  field(DOL2, "$(PREFIX):A2:FilterTimeR")
  field(DOL3, "$(PREFIX):B1:FilterTimeR")
  field(DOL4, "$(PREFIX):B2:FilterTimeR")
}

record(seq, "$(PREFIX):iConnect-SensorControlModes-FO")
{
  alias("$(PREFIX):MODE-CNCT-FO")
  field(DOL1, "0")
  field(LNK1, "$(PREFIX):iSensorControlModesInit.CALC PP")
  field(DOL2, "1")
  field(LNK2, "$(PREFIX):iSensorControlModesInit.CALC")
}

record(calcout, "$(PREFIX):iSensorControlModesInit")
{
  alias("$(PREFIX):MODE-INIT")
  field(INPA, "$(PREFIX):iSensorControlModesR MS")
  field(OUT,  "$(PREFIX):iSensorControlModesInit-FO PP")
  field(VAL,  "0")
  field(CALC, "1")
  field(OOPT, "Transition To Non-zero")
  field(IVOA, "Don't drive outputs")
}

record(seq, "$(PREFIX):iSensorControlModesInit-FO")
{
  alias("$(PREFIX):MODE-INIT-FO")
  field(LNK1, "$(PREFIX):A1:ControlModeS")
  field(LNK2, "$(PREFIX):A2:ControlModeS")
  field(LNK3, "$(PREFIX):B1:ControlModeS")
  field(LNK4, "$(PREFIX):B2:ControlModeS")
  field(DOL1, "$(PREFIX):A1:ControlModeR")
  field(DOL2, "$(PREFIX):A2:ControlModeR")
  field(DOL3, "$(PREFIX):B1:ControlModeR")
  field(DOL4, "$(PREFIX):B2:ControlModeR")
}
