record(stringin, "${P}${R}${SENSOR}:DevNameR")
{
  field(DESC, "Devicename of gauge connected to channel")
  field(DISP, "1")
}


record(stringin, "${P}${R}${SENSOR}:ChanR")
{
  field(DESC, "The channel this gauge is connected to")
  field(DISP, "1")
  field(PINI, "YES")
  field(VAL,  "${SENSOR}")
}


record(longin, "${P}${R}${SENSOR}:NumOfRlysR")
{
  field(DESC, "Number of relays assigned to channel")
  field(DISP, "1")
}


record(scalcout, "${P}${R}${SENSOR}:iCheckModType")
{
  field(INAA, "${P}${R}Mod${SLOT}:TypeR CP")
  field(INPA, "${P}${R}CommsOK CP")
  field(CALC, "'0'")
}


record(calcout, "${P}${R}${SENSOR}:iCheckType")
{
  field(INPA, "${P}${R}${SENSOR}:iCheckModType CP")
  field(INPB, "${P}${R}iSensorCtrlModes-RB.${SOURCE} CP")
  field(CALC, "A&&B")
  field(VAL,  "42")
  field(OOPT, "On Change")
  field(OUT,  "${P}${R}${SENSOR}:ValidR PP")
}


record(calcout, "${P}${R}${SENSOR}:iSetType")
{
  field(INPA, "${P}${R}CommsOK CP")
  field(INPB, "${P}${R}iSensorCtrlModes-RB.${SOURCE} CP")
  field(INPC, "${P}${R}${SENSOR}:ValidR CP")
  field(CALC, "(A?4:0)+(B?2:0)+(C?1:0)")
  field(OOPT, "On Change")
  field(DOPT, "Use OCAL")
  field(OCAL, "A ? (B ? (2 * C) : 1) : 0")
  field(VAL,  "42")
  field(OUT,  "${P}${R}${SENSOR}:iSensorType-FO PP")
}


record(dfanout, "${P}${R}${SENSOR}:iSensorType-FO")
{
  field(SELM, "All")
  field(OUTA, "${P}${R}${SENSOR}:iSensorTypeR PP")
  field(OUTB, "${P}${R}${SENSOR}:SensorTypeR.PROC")
}


record(mbbi, "${P}${R}${SENSOR}:iSensorTypeR")
{
# TWVL and TWST are set by vac_gauge_tpg300.db
  field(ZRVL, "0")
  field(ZRST, "N/A")

  field(ONVL, "1")
  field(ONST, "N/C")

  field(DISP, "1")
  field(PINI, "YES")
  field(VAL,  "0")
}


record(stringin, "${P}${R}${SENSOR}:SensorTypeR")
{
  field(DISP, "1")
  field(INP,  "${P}${R}${SENSOR}:iSensorTypeR")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${P}${R}CommsOK")
}


record(bi, "${P}${R}${SENSOR}:ValidR")
{
  field(ZNAM, "Incorrect Gauge Type")
  field(ONAM, "Correct Gauge Type")
  field(ZSV,  "MAJOR")
}


record(mbbi, "${P}${R}${SENSOR}:CtrlMode-RB")
{
  field(INP,  "${P}${R}iSensorCtrlModes-RB.${SOURCE} CP MSS")

  field(ZRVL, "0")
  field(ZRST, "NO SENSOR")

  field(ONVL, "1")
  field(ONST, "OFF")

  field(TWVL, "2")
  field(TWST, "AUTO")

  field(THVL, "3")
  field(THST, "ON")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${P}${R}${SENSOR}:ValidR CP")
}


record(mbbi, "${P}${R}${SENSOR}:FltTim-RB")
{
  field(DTYP, "Raw Soft Channel")
  field(INP,  "${P}${R}iSensorFltTims-RB.${SOURCE} CP MSS")

  field(ZRVL, "1")
  field(ZRST, "FAST")

  field(ONVL, "2")
  field(ONST, "MEDIUM")

  field(TWVL, "3")
  field(TWST, "SLOW")

  field(FLNK, "${P}${R}${SENSOR}:iFltTimInit")

  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${P}${R}${SENSOR}:ValidR CP")
}


record(mbbo, "${P}${R}${SENSOR}:FltTimS")
{
  field(DTYP, "Raw Soft Channel")

  field(ZRVL, "1")
  field(ZRST, "FAST")

  field(ONVL, "2")
  field(ONST, "MEDIUM")

  field(TWVL, "3")
  field(TWST, "SLOW")

# Cannot go directly to SensorFltTimsS as this PV needs to be processed when updated from -RB
  field(FLNK, "${P}${R}${SENSOR}:FltTimCommitS")
}


record(fanout, "${P}${R}${SENSOR}:FltTimCommitS")
{
# Dynamically disabled by iFltTimInit-FO when FltTimS is updated from its -RB
  field(FLNK, "${P}${R}SensorFltTimsS")
}


record(seq, "${P}${R}${SENSOR}:iConnect-FltTim-FO")
{
  field(DOL1, "0")
  field(LNK1, "${P}${R}${SENSOR}:iFltTimInit.PVAL")
}


record(calcout, "${P}${R}${SENSOR}:iFltTimInit")
{
  field(INPA, "${P}${R}${SENSOR}:FltTim-RB MS")
  field(OUT,  "${P}${R}${SENSOR}:iFltTimInit-FO PP")
  field(VAL,  "0")
  field(CALC, "1")
  field(OOPT, "Transition To Non-zero")
  field(IVOA, "Don't drive outputs")
}


record(seq, "${P}${R}${SENSOR}:iFltTimInit-FO")
{
  field(DOL1, "1")
  field(LNK1, "${P}${R}${SENSOR}:FltTimCommitS.DISA")

  field(DOL2, "${P}${R}${SENSOR}:FltTim-RB")
  field(LNK2, "${P}${R}${SENSOR}:FltTimS PP")

  field(DOL3, "0")
  field(LNK3, "${P}${R}${SENSOR}:FltTimCommitS.DISA")
}
