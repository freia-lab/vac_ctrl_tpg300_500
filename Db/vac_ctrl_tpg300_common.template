record(stringin, "${DEVICENAME}:iUITypeR")
{
  field(PINI, "YES")
  field(VAL,  "TPG-300")
}

record(stringin, "${DEVICENAME}:ModMain:FWVersionR")
{
  alias("${DEVICENAME}:VERSION-RBV")
  field(DTYP, "stream")
  field(INP,  "@vac_ctrl_tpg300.proto get_version ${ASYNPORT}")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(scalcout, "${DEVICENAME}:iModTypesR")
{
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto get_slots() ${ASYNPORT}")
  field(CALC, "1")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:ConnectedR")
}

record(sseq, "${DEVICENAME}:iModTypesR-FO")
{
  field(DOL1, "${DEVICENAME}:iModTypesR.AA CP MSS")
  field(LNK1, "${DEVICENAME}:ModA:TypeR PP MSS")

  field(DOL2, "${DEVICENAME}:iModTypesR.BB CP MSS")
  field(LNK2, "${DEVICENAME}:ModB:TypeR PP MSS")

  field(DOL3, "${DEVICENAME}:iModTypesR.CC CP MSS")
  field(LNK3, "${DEVICENAME}:ModComm:TypeR PP MSS")
}

record(stringin, "${DEVICENAME}:ModA:TypeR")
{
  alias("${DEVICENAME}:SLOT1-RBV")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:ConnectedR")
}

record(stringin, "${DEVICENAME}:ModB:TypeR")
{
  alias("${DEVICENAME}:SLOT2-RBV")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:ConnectedR")
}

record(stringin, "${DEVICENAME}:ModComm:TypeR")
{
  alias("${DEVICENAME}:SLOT3-RBV")
  field(FLNK, "${DEVICENAME}:iDisabledR")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:ConnectedR")
}

record(ai, "${DEVICENAME}:BaudrtR")
{
  alias("${DEVICENAME}:BAUD-RBV")
  field(DTYP, "stream")
  field(INP,  "@vac_ctrl_tpg300.proto get_baud ${ASYNPORT}")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(bi, "${DEVICENAME}:CCUnderRangeControlR")
{
  alias("${DEVICENAME}:PUC-RBV")
  field(DTYP, "stream")
  field(INP,  "@vac_ctrl_tpg300.proto get_puc ${ASYNPORT}")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(bo, "${DEVICENAME}:CCUnderRangeControlS")
{
  alias("${DEVICENAME}:PUC")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto set_puc ${ASYNPORT}")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "${DEVICENAME}:CCUnderRangeControlR")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(mbbi, "${DEVICENAME}:Unit-RB")
{
  alias("${DEVICENAME}:UNITS-RBV")
  field(DTYP, "stream")
  field(INP,  "@vac_ctrl_tpg300.proto get_units ${ASYNPORT}")
  field(ONST, "mBar")
  field(TWST, "Torr")
  field(THST, "Pa")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(mbbo, "${DEVICENAME}:UnitS")
{
  alias("${DEVICENAME}:UNITS")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto set_units ${ASYNPORT}")
  field(ONST, "mBar")
  field(TWST, "Torr")
  field(THST, "Pa")
  field(FLNK, "${DEVICENAME}:Unit-RB")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(mbbi, "${DEVICENAME}:SaveParamsR")
{
  alias("${DEVICENAME}:SAVE-PARAMS-RBV")
  field(DTYP, "stream")
  field(INP,  "@vac_ctrl_tpg300.proto get_save_params ${ASYNPORT}")
  field(ZRST, "Default")
  field(ONST, "User-defined")
  field(TWST, "User-defined HS")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(mbbo, "${DEVICENAME}:SaveParamsS")
{
  alias("${DEVICENAME}:SAVE-PARAMS")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto set_save_params ${ASYNPORT}")
  field(ZRST, "Default")
  field(ONST, "User-defined")
  field(TWST, "User-defined HS")
  field(FLNK, "${DEVICENAME}:iReadbacks-FO")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(calcout, "${DEVICENAME}:iSensorCtrlModes-RB")
{
  alias("${DEVICENAME}:MODE-RBV")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto get_modes() ${ASYNPORT}")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

#record(seq, "${DEVICENAME}:iSensorCtrlModes-RB-FO")
#{
#  alias("${DEVICENAME}:MODE-FO")
#  field(DOL1, "${DEVICENAME}:iSensorCtrlModes-RB.A CP MSS")
#  field(LNK1, "${DEVICENAME}:A1:CtrlMode-RB PP MSS")
#
#  field(DOL2, "${DEVICENAME}:iSensorCtrlModes-RB.B CP MSS")
#  field(LNK2, "${DEVICENAME}:A2:CtrlMode-RB PP MSS")
#
#  field(DOL3, "${DEVICENAME}:iSensorCtrlModes-RB.C CP MSS")
#  field(LNK3, "${DEVICENAME}:B1:CtrlMode-RB PP MSS")
#
#  field(DOL4, "${DEVICENAME}:iSensorCtrlModes-RB.D CP MSS")
#  field(LNK4, "${DEVICENAME}:B2:CtrlMode-RB PP MSS")
#}

record(calcout, "${DEVICENAME}:SensorCtrlModesS")
{
  alias("${DEVICENAME}:MODE")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto set_modes() ${ASYNPORT}")
  field(INPA, "${DEVICENAME}:A1:CtrlModeS")
  field(INPB, "${DEVICENAME}:A2:CtrlModeS")
  field(INPC, "${DEVICENAME}:B1:CtrlModeS")
  field(INPD, "${DEVICENAME}:B2:CtrlModeS")
  field(FLNK, "${DEVICENAME}:SensorCtrlModesS-ErrorR")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

record(mbbi, "${DEVICENAME}:SensorCtrlModesS-ErrorR")
{
  alias("${DEVICENAME}:MODE-STAT")
  field(DTYP, "Raw Soft Channel")
  field(INP,  "${DEVICENAME}:SensorCtrlModesS.E")
  field(ZRVL, "0")
  field(ZRST, "NO ERROR")
  field(ONVL, "1")
  field(ONST, "SYNTAX ERROR")
  field(ONSV, "MAJOR")
  field(TWVL, "10")
  field(TWST, "INVALID PARAMETER")
  field(TWSV, "MAJOR")
  field(THVL, "100")
  field(THST, "NO HARDWARE")
  field(THSV, "MAJOR")
  field(FRVL, "1000")
  field(FRST, "TPG ERROR")
  field(FRSV, "MAJOR")
  field(FLNK, "${DEVICENAME}:iSensorCtrlModes-RB")
}

record(calcout, "${DEVICENAME}:iSensorFltTims-RB")
{
  alias("${DEVICENAME}:FILT-RBV")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto get_filter() ${ASYNPORT}")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}

#record(seq, "${DEVICENAME}:iSensorFltTims-RB-FO")
#{
#  alias("${DEVICENAME}:FILT-FO")
#  field(DOL1, "${DEVICENAME}:iSensorFltTims-RB.A CP MSS")
#  field(LNK1, "${DEVICENAME}:A1:FltTim-RB.RVAL PP MSS")
#
#  field(DOL2, "${DEVICENAME}:iSensorFltTims-RB.B CP MSS")
#  field(LNK2, "${DEVICENAME}:A2:FltTim-RB.RVAL PP MSS")
#
#  field(DOL3, "${DEVICENAME}:iSensorFltTims-RB.C CP MSS")
#  field(LNK3, "${DEVICENAME}:B1:FltTim-RB.RVAL PP MSS")
#
#  field(DOL4, "${DEVICENAME}:iSensorFltTims-RB.D CP MSS")
#  field(LNK4, "${DEVICENAME}:B2:FltTim-RB.RVAL PP MSS")
#
#  field(FLNK, "${DEVICENAME}:iSensorFltTimsInit PP")
#}

record(calcout, "${DEVICENAME}:SensorFltTimsS")
{
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto set_filter() ${ASYNPORT}")
  field(INPA, "${DEVICENAME}:A1:FltTimS.RVAL")
  field(INPB, "${DEVICENAME}:A2:FltTimS.RVAL")
  field(INPC, "${DEVICENAME}:B1:FltTimS.RVAL")
  field(INPD, "${DEVICENAME}:B2:FltTimS.RVAL")
  field(FLNK, "${DEVICENAME}:SensorFltTimsS-ErrorR")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}


record(mbbi, "${DEVICENAME}:SensorFltTimsS-ErrorR")
{
  field(DTYP, "Raw Soft Channel")
  field(INP,  "${DEVICENAME}:SensorFltTimsS.E")
  field(ZRVL, "0")
  field(ZRST, "NO ERROR")
  field(ONVL, "1")
  field(ONST, "SYNTAX ERROR")
  field(ONSV, "MAJOR")
  field(TWVL, "10")
  field(TWST, "INVALID PARAMETER")
  field(TWSV, "MAJOR")
  field(THVL, "100")
  field(THST, "NO HARDWARE")
  field(THSV, "MAJOR")
  field(FRVL, "1000")
  field(FRST, "TPG ERROR")
  field(FRSV, "MAJOR")
  field(FLNK, "${DEVICENAME}:iSensorFltTims-RB")
}


record(calcout, "${DEVICENAME}:iRlyStatsR")
{
  alias("${DEVICENAME}:FUNC-STAT-RBV")
  field(DTYP, "stream")
  field(OUT,  "@vac_ctrl_tpg300.proto get_func_stat() ${ASYNPORT}")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}


record(fanout, "${DEVICENAME}:iPressuresR-FO")
{
  field(LNK1, "${DEVICENAME}:A1:iPrsR")
  field(LNK2, "${DEVICENAME}:A2:iPrsR")
  field(LNK3, "${DEVICENAME}:B1:iPrsR")
  field(LNK4, "${DEVICENAME}:B2:iPrsR")
}


record(fanout, "${DEVICENAME}:iScan1")
{
#  field(SCAN, "1 second")
  field(LNK1, "${DEVICENAME}:iPressuresR-FO")
  field(LNK2, "${DEVICENAME}:iRlyStatsR")
}


record(fanout, "${DEVICENAME}:iScan10")
{
#  field(SCAN, "10 second")
  field(LNK1, "${DEVICENAME}:iModTypesR PP")
  field(LNK2, "${DEVICENAME}:iSensorCtrlModes-RB PP")
  field(LNK3, "${DEVICENAME}:Unit-RB PP")
  field(FLNK, "${DEVICENAME}:iRereadScan")
}


record(calcout, "${DEVICENAME}:iRereadScan")
{
  field(DESC, "Re-read all values every minute or so")
  field(INPA, "${DEVICENAME}:iRereadScan")
  field(CALC, "A<5?A+1:0")
  field(OOPT, "When Zero")
  field(OUT,  "${DEVICENAME}:iReadbacks-FO PP")
  field(DISV, "0")
  field(DISS, "INVALID")
  field(SDIS, "${DEVICENAME}:CommsOK")
}




################################################################################
# Reconnect logic                                                              #
################################################################################

record(asyn,"${DEVICENAME}:iASYN")
{
  field(DTYP, "asynRecordDevice")
  field(PORT, "${ASYNPORT}")
}


record(bi, "${DEVICENAME}:ConnectedR")
{
  field(INP,  "${DEVICENAME}:iASYN.CNCT CP")
  field(ONAM, "Connected")
  field(ZNAM, "Disconnected")
  field(ZSV,  "MAJOR")
  field(FLNK, "${DEVICENAME}:iModTypesR")
}


record(scalcout, "${DEVICENAME}:iDisabledR")
{
  field(INPA, "${DEVICENAME}:ConnectedR CP")
  field(INBB, "${DEVICENAME}:ModComm:TypeR")
  field(INPC, "${DEVICENAME}:iModTypesR.STAT")
  field(CALC, "D:=(!(A && BB[0,4]=='IF300') || C);D")
  field(PINI, "YES")
  field(OCAL, "!D")
  field(DOPT, "Use OCAL")
  field(OOPT, "On Change")
  field(OUT,  "${DEVICENAME}:CommsOK PP")
}


record(bi, "${DEVICENAME}:CommsOK")
{
  alias("${DEVICENAME}:ValidR")
  field(ZNAM, "No communication")
  field(ONAM, "Communication is OK")
  field(ZSV,  "MINOR")
  field(FLNK, "${DEVICENAME}:iInit-FO")
}


record(fanout, "${DEVICENAME}:iInit-FO")
{
  field(LNK1, "${DEVICENAME}:iPressuresR-FO")
  field(LNK2, "${DEVICENAME}:iRlyStatsR")
  field(LNK3, "${DEVICENAME}:iConnect-FltTims-FO")
  field(LNK4, "${DEVICENAME}:iConnect-Rlys-FO")
  field(FLNK, "${DEVICENAME}:iReadbacks-FO")
}


record(fanout, "${DEVICENAME}:iConnect-FltTims-FO")
{
  field(LNK1, "${DEVICENAME}:A1:iConnect-FltTim-FO")
  field(LNK2, "${DEVICENAME}:A2:iConnect-FltTim-FO")
  field(LNK3, "${DEVICENAME}:B1:iConnect-FltTim-FO")
  field(LNK4, "${DEVICENAME}:B2:iConnect-FltTim-FO")
}


record(fanout, "${DEVICENAME}:iConnect-Rlys-FO")
{
  field(LNK1, "${DEVICENAME}:Rly1:iConnect-FO")
  field(LNK2, "${DEVICENAME}:Rly2:iConnect-FO")
  field(LNK3, "${DEVICENAME}:Rly3:iConnect-FO")
  field(LNK4, "${DEVICENAME}:Rly4:iConnect-FO")
  field(LNK5, "${DEVICENAME}:RlyA:iConnect-FO")
  field(LNK6, "${DEVICENAME}:RlyB:iConnect-FO")
}


record(fanout, "${DEVICENAME}:iReadbacks-FO")
{
  field(LNK1, "${DEVICENAME}:iRlySPs-RB-FO")
  field(LNK2, "${DEVICENAME}:iSensorFltTims-RB")
  field(LNK3, "${DEVICENAME}:iSensorCtrlModes-RB")
  field(LNK4, "${DEVICENAME}:Unit-RB")
  field(LNK5, "${DEVICENAME}:CCUnderRangeControlR")
  field(LNK6, "${DEVICENAME}:SaveParamsR")
  field(LNK7, "${DEVICENAME}:ModMain:FWVersionR")
  field(LNK8, "${DEVICENAME}:iModTypesR")
}


record(fanout, "${DEVICENAME}:iRlySPs-RB-FO")
{
  field(LNK1, "${DEVICENAME}:Rly1:iGetR")
  field(LNK2, "${DEVICENAME}:Rly2:iGetR")
  field(LNK3, "${DEVICENAME}:Rly3:iGetR")
  field(LNK4, "${DEVICENAME}:Rly4:iGetR")
  field(LNK5, "${DEVICENAME}:RlyA:iGetR")
  field(LNK6, "${DEVICENAME}:RlyB:iGetR")
}


#record(seq, "${DEVICENAME}:iConnect-FltTims-FO")
#{
#  field(DOL1, "0")
#  field(LNK1, "${DEVICENAME}:iSensorFltTimsInit.PVAL")
#}
#
#
#record(calcout, "${DEVICENAME}:iSensorFltTimsInit")
#{
#  field(INPA, "${DEVICENAME}:iSensorFltTims-RB MS")
#  field(OUT,  "${DEVICENAME}:iSensorFltTimsInit-FO PP")
#  field(VAL,  "0")
#  field(CALC, "1")
#  field(OOPT, "Transition To Non-zero")
#  field(IVOA, "Don't drive outputs")
#}
#
#
#record(seq, "${DEVICENAME}:iSensorFltTimsInit-FO")
#{
#  # Do not PP; FltTimS has an FLNK to SensorFltTimsS
#  field(DOL1, "${DEVICENAME}:A1:FltTim-RB")
#  field(LNK1, "${DEVICENAME}:A1:FltTimS")
#
#  field(DOL2, "${DEVICENAME}:A2:FltTim-RB")
#  field(LNK2, "${DEVICENAME}:A2:FltTimS")
#
#  field(DOL3, "${DEVICENAME}:B1:FltTim-RB")
#  field(LNK3, "${DEVICENAME}:B1:FltTimS")
#
##  field(DOL4, "${DEVICENAME}:B2:FltTim-RB")
#  field(LNK4, "${DEVICENAME}:B2:FltTimS")
#}
